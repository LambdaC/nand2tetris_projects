// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Sys.jack

/**
 * A library that supports various program execution services.
 */
class Sys {

    /** Performs all the initializations required by the OS. */
    function void init() {
		do Math.init();
		do Keyboard.init();
		do Memory.init();
		do Output.init();
		do Screen.init();
		do Main.main();
		return;
    }

    /** Halts the program execution. */
    function void halt() {
		while(true){
		}
		return;
    }

    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration) {
		var int count1, count2,count3, timeFactor1, timeFactor2;
		let timeFactor1 = 20000;
		let timeFactor2 = 20000;
		let count1 = 0;
		let count2 = 0;
		let count3 = 0;
		while(count3 < timeFactor2){
			while(count1 < timeFactor1){
				while(count2 < duration) {
					let count2 = count2 + 1;
				}
				let count1 = count1 + 1;
			}
			let count3 = count3 + 1;
		}
		return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
		var String errCode, errStr, errClose;
		let errCode = String.new(10);
		let errStr = String.new(4);
		let errClose = String.new(1);
		do errStr.appendChar(69);
		do errStr.appendChar(82);
		do errStr.appendChar(82);
		do errStr.appendChar(60);
		do err.setInt(errorCode);
		do errClose.appendChar(62);
		do Output.printString(errStr);
		do Output.printString(errCode);
		do Output.printString(errClose);
		do errStr.dispose();
		do errCode.dispose();
		do errClose.dispose();
		do Sys.halt();
		return;
    }
}
