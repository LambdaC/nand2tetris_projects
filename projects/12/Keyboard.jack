// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
	
	static int keyboard;

    /** Initializes the keyboard. */
    function void init() {
		let keyboard = 24576;
		return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		return Memory.peek(keyboard);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
		var int c;
		while(Keyboard.keyPressed() = 0) {
			
		}
		
		let c = Keyboard.keyPressed();
		while(~(Keyboard.keyPressed() = 0)){
		}
		
		do Output.printChar(c);
		return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
		var String input, result;
		var int c, index;
		do Output.printString(message);
		let input = String.new(100);
		let c = Keyboard.readChar();
		while(~(c = 128)) {
			if(~(c = 129)) {
				do input.appendChar(c);
			}else{
				if(input.length() > 0){
					do input.eraseLastChar();
				}
			}
			let c = Keyboard.readChar();
		}
		let index = 0;
		let result = String.new(input.length());
		while(index < input.length()) {
			do result.appendChar(input.charAt(index));
			let index = index + 1;
		}
		do input.dispose();
		return result;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
		var int c, sum , index;
		var String input;
		var boolean isNeg;
		let input = String.new(100);
		do Output.printString(message);
		let c = Keyboard.readChar();
		while( ~(c = 128)) {
			if(~(c=129)){
				do input.appendChar(c);
			}else{
				if(input.length() > 0){
					do input.eraseLastChar();
				}
			}
			let c = Keyboard.readChar();
		}
		let index = 0;
		let sum = 0;
		let isNeg = false;
		while(index < input.length()) {
			let c = input.charAt(index);
			if((c < 48 | c > 57) & ~(index = 0 & c = 45)) {
				return 0;
			}
			if(index = 0 & c = 45) {
				let isNeg = true;
			}else{
				let sum = sum * 10 + (c - 48);
			}
			let index = index + 1;
		}
		if(isNeg) {
			return -sum;
		}
		return sum;
    }
}
