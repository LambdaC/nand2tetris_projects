function Obstacle.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 207
pop this 1
push constant 5
pop this 2
push pointer 0
return
function Obstacle.changeSpeed 0
push argument 0
pop pointer 0
push argument 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 5
pop this 2
goto IF_END0
label IF_FALSE0
push this 2
push argument 1
add
pop this 2
label IF_END0
push constant 0
return
function Obstacle.update 0
push argument 0
pop pointer 0
push this 0
push this 2
sub
pop this 0
push constant 0
return
function Obstacle.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function Obstacle.getX 0
push argument 0
pop pointer 0
push this 0
return
function Obstacle.clear 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Obstacle.draw 1
push argument 0
pop pointer 0
push constant 16384
push this 0
push constant 16
call Math.divide 2
add
push this 1
push constant 32
call Math.multiply 2
add
pop local 0
push local 0
push constant 0
add
push constant 448
call Memory.poke 2
pop temp 0
push local 0
push constant 32
add
push constant 13280
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 31712
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 31712
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 31712
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 31718
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 32751
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 32751
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 16367
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 1023
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 1023
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 1022
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 1016
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 992
call Memory.poke 2
pop temp 0
push local 0
push constant 448
add
push constant 992
call Memory.poke 2
pop temp 0
push local 0
push constant 480
add
push constant 992
call Memory.poke 2
pop temp 0
push constant 0
return
function Obstacle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
