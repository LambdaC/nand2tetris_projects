function CollisionDetection.myBulletAndEnemyDetection 4
push constant 0
pop local 0
push constant 0
pop local 1
push argument 0
call BulletContainer.size 1
push constant 0
eq
push argument 1
call EnemyContainer.size 1
or
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
label WHILE_EXP0
push local 0
push argument 0
call BulletContainer.maxSize 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
call BulletContainer.getBullet 2
pop local 2
push local 2
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
label WHILE_EXP1
push local 1
push argument 1
call EnemyContainer.maxSize 1
lt
not
if-goto WHILE_END1
push argument 1
push local 1
call EnemyContainer.getEnemy 2
pop local 3
push local 3
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
call Bullet.getRow 1
push local 2
call Bullet.getCol 1
push local 2
call Bullet.getWidth 1
push local 2
call Bullet.getHeight 1
push local 3
call Enemy.getRow 1
push local 3
call Enemy.getCol 1
push local 3
call Enemy.getWidth 1
push local 3
call Enemy.getHeight 1
call CollisionDetection.isCollided 8
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
call Bullet.setKilled 1
pop temp 0
push local 3
call Enemy.setKilled 1
pop temp 0
label IF_FALSE3
label IF_FALSE2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function CollisionDetection.myBulletAndEnemyBulletDetection 4
push constant 0
pop local 0
push constant 0
pop local 1
push argument 0
call BulletContainer.size 1
push constant 0
eq
push argument 1
call BulletContainer.size 1
or
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
label WHILE_EXP0
push local 0
push argument 0
call BulletContainer.maxSize 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
call BulletContainer.getBullet 2
pop local 2
push local 2
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
label WHILE_EXP1
push local 1
push argument 1
call BulletContainer.maxSize 1
lt
not
if-goto WHILE_END1
push argument 1
push local 1
call BulletContainer.getBullet 2
pop local 3
push local 3
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
call Bullet.getCol 1
push local 3
call Bullet.getCol 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
call Bullet.getRow 1
push local 3
call Bullet.getRow 1
gt
push local 2
call Bullet.getRow 1
and
push local 3
call Bullet.getRow 1
push local 3
call Bullet.getHeight 1
add
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 2
call Bullet.setKilled 1
pop temp 0
push local 3
call Bullet.setKilled 1
pop temp 0
label IF_FALSE4
label IF_FALSE3
label IF_FALSE2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function CollisionDetection.aircraftAndBulletDetection 4
push argument 1
call BulletContainer.size 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
call BulletContainer.maxSize 1
lt
not
if-goto WHILE_END0
push argument 1
push local 0
call BulletContainer.getBullet 2
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
call Aircraft.getRow 1
push argument 0
call Aircraft.getCol 1
push argument 0
call Aircraft.getWidth 1
push argument 0
call Aircraft.getHeight 1
push local 1
call Bullet.getRow 1
push local 1
call Bullet.getCol 1
push local 1
call Bullet.getWidth 1
push local 1
call Bullet.getHeight 1
call CollisionDetection.isCollided 8
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call Aircraft.setKilled 1
pop temp 0
push local 1
call Bullet.setKilled 1
pop temp 0
push constant 0
return
label IF_FALSE2
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function CollisionDetection.aircraftAndEnemyDetection 2
push argument 1
call EnemyContainer.size 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
call EnemyContainer.maxSize 1
lt
not
if-goto WHILE_END0
push argument 1
push local 0
call EnemyContainer.getEnemy 2
pop local 1
push local 1
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
call Aircraft.getRow 1
push argument 0
call Aircraft.getCol 1
push argument 0
call Aircraft.getWidth 1
push argument 0
call Aircraft.getHeight 1
push local 1
call Enemy.getRow 1
push local 1
call Enemy.getCol 1
push local 1
call Enemy.getWidth 1
push local 1
call Enemy.getHeight 1
call CollisionDetection.isCollided 8
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call Aircraft.setKilled 1
pop temp 0
push local 1
call Enemy.setKilled 1
pop temp 0
push constant 0
return
label IF_FALSE2
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function CollisionDetection.isCollided 0
push argument 0
push argument 4
eq
push argument 0
or
push argument 4
lt
push argument 4
push argument 0
push argument 3
add
eq
push argument 4
or
push argument 0
push argument 3
add
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 5
eq
push argument 1
or
push argument 5
lt
push argument 5
push argument 1
push argument 2
add
eq
push argument 5
or
push argument 1
push argument 2
add
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push argument 4
push argument 0
eq
push argument 4
or
push argument 0
lt
push argument 0
push argument 4
push argument 7
add
eq
push argument 0
or
push argument 4
push argument 7
add
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 5
push argument 1
eq
push argument 5
or
push argument 1
lt
push argument 1
push argument 5
push argument 6
add
eq
push argument 1
or
push argument 5
push argument 6
add
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
label IF_FALSE2
push constant 0
return
